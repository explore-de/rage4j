/* Hero Styles */
.hero {
    opacity: 0;
    transform: translateY(30px);
    transition: opacity 1s ease-out, transform 1s ease-out;
    min-height: 100vh;
    padding-bottom: 10rem;
}

.heroLoaded {
    opacity: 1;
    transform: translateY(0);
}

.hero::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
}

.heroContent {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 2rem;
    margin-top: 8rem;
    opacity: 0;
    animation: fadeInFromRight 1s ease-out 0.3s forwards;
}

.heroLogo {
    user-select: none;
    width: 300px;
    height: auto;
    transform-origin: center;
    will-change: transform;
    opacity: 0;
    transition: all 1.5s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    animation: logoEntrance 2s ease-out 0.5s forwards;
}

@keyframes logoEntrance {
    0% {
        opacity: 0;
        transform: scale(0.8) rotateY(-180deg) translateY(0px);
    }
    100% {
        opacity: 1;
        transform: scale(1) rotateY(0deg) translateY(0px);
    }
}

.logoFloating {
    animation: float 6s ease-in-out infinite;
    opacity: 1 !important;
    transform: scale(1) rotateY(0deg) translateY(0px);
}

@keyframes float {
    0% {
        transform: scale(1) rotateY(0deg) translateY(0px) rotate(0deg);
    }
    25% {
        transform: scale(1.005) rotateY(0deg) translateY(-6px) rotate(0.3deg);
    }
    50% {
        transform: scale(1.008) rotateY(0deg) translateY(-10px) rotate(0deg);
    }
    75% {
        transform: scale(1.003) rotateY(0deg) translateY(-4px) rotate(-0.3deg);
    }
    100% {
        transform: scale(1) rotateY(0deg) translateY(0px) rotate(0deg);
    }
}

.heroText {
    opacity: 0;
    animation: fadeInFromRight 1s ease-out 0.7s forwards;
}

.heroCodeSection {
    margin-top: 5rem;
    width: 100%;
    text-align: left;
    padding: 0 1rem;
    opacity: 0;
    animation: slideInUp 1s ease-out 0.9s forwards;
}

.heroCode {
    max-width: 600px;
    margin: 0;
    background: rgba(0, 0, 0, 0.7);
    border-radius: 8px;
}

.scrollArrowContainer {
    display: flex;
    justify-content: center;
    margin-top: 6rem;
    margin-bottom: 4rem;
    opacity: 0;
    animation: fadeInBounce 1.2s ease-out 1.5s forwards;
}

.scrollArrow {
    background: none;
    border: none;
    color: var(--ifm-color-primary);
    cursor: pointer;
    padding: 1.5rem;
    border-radius: 50%;
    transition: all 0.3s ease;
    animation: blink 2s infinite;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1.5rem;
}

.scrollArrow:hover {
    color: var(--ifm-color-primary);
    transform: translateY(-3px);
    background: rgba(255, 255, 255, 0.1);
}

.scrollArrow svg {
    width: 32px;
    height: 32px;
}

@keyframes slideInUp {
    from {
        opacity: 0;
        transform: translateY(50px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

@keyframes fadeInFromRight {
    from {
        opacity: 0;
        transform: translateX(90px);
    }
    to {
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes logoEntrance {
    0% {
        opacity: 0;
        transform: scale(0.8) rotateY(-180deg) translateY(0px);
    }
    100% {
        opacity: 1;
        transform: scale(1) rotateY(0deg) translateY(0px);
    }
}

.logoFloating {
    animation: float 6s ease-in-out infinite !important;
    transition: all 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94) !important;
}

@keyframes float {
    0% {
        transform: translateY(0px) rotate(0deg) scale(1);
    }
    25% {
        transform: translateY(-6px) rotate(0.3deg) scale(1.005);
    }
    50% {
        transform: translateY(-10px) rotate(0deg) scale(1.008);
    }
    75% {
        transform: translateY(-4px) rotate(-0.3deg) scale(1.003);
    }
    100% {
        transform: translateY(0px) rotate(0deg) scale(1);
    }
}

.heroLogo.floating {
    animation: float 6s ease-in-out infinite;
}

@keyframes fadeInBounce {
    0% {
        opacity: 0;
        transform: translateY(20px);
    }
    60% {
        opacity: 1;
        transform: translateY(-5px);
    }
    100% {
        opacity: 1;
        transform: translateY(0);
    }
}

@keyframes blink {
    0%, 50% {
        opacity: 1;
        transform: scale(1);
    }
    25% {
        opacity: 0.7;
        transform: scale(1.1);
    }
    75% {
        opacity: 0.8;
        transform: scale(0.95);
    }
}

@media (prefers-reduced-motion: reduce) {
    .hero {
        opacity: 1;
        transform: none;
        transition: none;
    }

    .heroContent,
    .heroLogo,
    .heroText,
    .heroCodeSection,
    .scrollArrowContainer {
        opacity: 1;
        animation: none;
    }

    .scrollArrow {
        animation: none;
    }
}

@media screen and (max-width: 996px) {
    .heroSection {
        padding: 2rem;
    }

    .heroContent {
        flex-direction: column;
        text-align: center;
    }

    .heroText {
        text-align: center;
    }

    .heroLogo {
        width: 250px;
    }

    .buttons {
        justify-content: center !important;
    }
}

@media (max-width: 996px) {
    .hero {
        min-height: 60vh;
        padding: 2rem 1rem;
        background: #000000;
    }

    .heroContent {
        flex-direction: column;
        text-align: center;
        gap: 1.5rem;
        margin-top: 4rem;
    }

    .heroLogo {
        width: 280px;
    }

    .heroText {
        text-align: center;
    }

    .heroCodeSection {
        margin-top: 3rem;
        padding: 0 0.5rem;
    }

    .heroCode {
        max-width: 100%;
        font-size: 0.9rem;
    }

    .buttons {
        justify-content: center !important;
        flex-wrap: wrap;
        gap: 1rem;
    }
}

@media (max-width: 768px) {
    .hero {
        min-height: 50vh;
        padding: 1.5rem 0.5rem;
        padding-bottom: 5rem;
        background: #000000;
    }

    .heroContent {
        margin-top: 2rem;
        gap: 1rem;
    }

    .heroLogo {
        width: 220px;
    }

    .heroCodeSection {
        margin-top: 2rem;
        padding: 0 0.25rem;
    }

    .typingCodeWrapper {
        min-height: 180px;
        padding: 1rem;
        border-radius: 12px;
    }

    .scrollArrowContainer {
        margin-top: 3rem;
        margin-bottom: 2rem;
    }

    .buttons {
        flex-direction: column;
        align-items: center;
        gap: 0.75rem;
        margin-top: 2rem;
    }

    .buttons :global(.button) {
        width: 100%;
        max-width: 280px;
        min-height: 44px;
        padding: 0.75rem 1.5rem;
    }
}

@media (max-width: 480px) {
    .hero {
        min-height: 40vh;
        padding: 1rem 0.25rem;
        padding-bottom: 3rem;
        background: #000000;
    }

    .heroContent {
        margin-top: 1rem;
    }

    .heroLogo {
        width: 180px;
    }

    .typingCodeWrapper {
        min-height: 150px;
        padding: 0.75rem;
        font-size: 0.8rem;
    }

    .heroCodeSection {
        margin-top: 1.5rem;
    }

    .scrollArrowContainer {
        margin-top: 2rem;
        margin-bottom: 1rem;
    }

    .scrollArrow {
        padding: 1rem;
        font-size: 1.2rem;
    }

    .scrollArrow svg {
        width: 24px;
        height: 24px;
    }
}

[data-theme='light'] .hero {
    position: relative;
    background: none;
}

[data-theme='light'] .hero::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: 0;
}

[data-theme='light'] .hero > * {
    position: relative;
    z-index: 1;
}

[data-theme='light'] .heroDescription {
    -webkit-text-fill-color: rgba(0, 0, 0, 0.66);
    text-shadow: none;
}

[data-theme='light'] .scrollArrow {
    color: rgba(220, 38, 38, 0.8);
}

[data-theme='light'] .scrollArrow:hover {
    color: rgba(220, 38, 38, 1);
    background: rgba(220, 38, 38, 0.02);
}

.typingCode {
    font-family: monospace;
    border-right: 2px solid var(--ifm-color-primary);
    white-space: pre;
    overflow: hidden;
    border-color: black;
}

.typingCodeWrapper {
    border-radius: 24px;
    min-height: 220px;
    padding: 1.5rem;
    position: relative;
    overflow: hidden;
    width: 100%;
    max-width: 100%;
}

.typingCodeWrapper::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg,
    transparent,
    rgba(203, 30, 30, 0.1),
    transparent);
}


.typingCodeWrapper pre,
.typingCodeWrapper code,
.typingCodeWrapper .prism-code {
    border-radius: inherit;
    background: transparent !important;
    overflow-x: auto;
    white-space: pre;
    word-wrap: normal;
    font-size: inherit;
}

@media (max-width: 996px) {
    .typingCodeWrapper {
        padding: 1.25rem;
        min-height: 200px;
        font-size: 0.85rem;
        margin: 0 auto;
    }

    .heroCodeSection {
        padding: 0 0.5rem;
        max-width: 100%;
    }

    .heroCode {
        max-width: 100%;
        font-size: 0.85rem;
        overflow-x: auto;
    }
}

@media (max-width: 768px) {
    .typingCodeWrapper {
        min-height: 180px;
        padding: 1rem;
        border-radius: 12px;
        font-size: 0.8rem;
        overflow-x: auto;
    }

    .typingCodeWrapper pre,
    .typingCodeWrapper code,
    .typingCodeWrapper .prism-code {
        font-size: 0.8rem;
        line-height: 1.4;
        overflow-x: auto;
        -webkit-overflow-scrolling: touch;
    }

    .heroCodeSection {
        margin-top: 2rem;
        padding: 0 0.25rem;
    }

    .heroCode {
        font-size: 0.8rem;
        overflow-x: auto;
        white-space: nowrap;
    }
}

@media (max-width: 480px) {
    .typingCodeWrapper {
        min-height: 150px;
        padding: 0.75rem;
        font-size: 0.75rem;
        border-radius: 8px;
        overflow-x: auto;
        -webkit-overflow-scrolling: touch;
    }

    .typingCodeWrapper pre,
    .typingCodeWrapper code,
    .typingCodeWrapper .prism-code {
        font-size: 0.75rem;
        line-height: 1.3;
        overflow-x: auto;
        white-space: pre;
        word-break: keep-all;
    }

    .heroCodeSection {
        margin-top: 1.5rem;
        padding: 0;
    }

    .heroCode {
        font-size: 0.75rem;
        overflow-x: auto;
        max-width: 100%;
    }

    .typingCode {
        white-space: pre;
        overflow-x: auto;
        min-width: max-content;
        font-size: inherit;
    }
}

.navbar__link {
    position: relative;
    transition: all 0.3s cubic-bezier(0.16, 1, 0.3, 1);
}

.navbar__link::before {
    content: '';
    position: absolute;
    bottom: -5px;
    left: 50%;
    width: 0;
    height: 2px;
    background: linear-gradient(90deg, transparent, var(--ifm-color-primary), transparent);
    transition: all 0.3s cubic-bezier(0.16, 1, 0.3, 1);
    transform: translateX(-50%);
}

.navbar__link:hover::before {
    width: 100%;
}

.navbar__link:hover {
    color: var(--ifm-color-primary) !important;
    transform: translateY(-2px);
}

.footer__link-item {
    position: relative;
    transition: all 0.3s cubic-bezier(0.16, 1, 0.3, 1);
}

.footer__link-item::before {
    content: '';
    position: absolute;
    bottom: -3px;
    left: 0;
    width: 0;
    height: 1px;
    background: var(--ifm-color-primary);
    transition: width 0.3s cubic-bezier(0.16, 1, 0.3, 1);
}

.footer__link-item:hover::before {
    width: 100%;
}

.footer__link-item:hover {
    color: #cb1e1e !important;
    transform: translateY(-2px);
    text-shadow: 0 0 10px rgba(203, 30, 30, 0.3);
}

.featureCard {
    background: rgba(0, 0, 0, 0.8);
    border: 1px solid var(--ifm-color-primary);
    border-radius: 12px;
    padding: 2rem;
    transition: all 0.4s cubic-bezier(0.16, 1, 0.3, 1);
    position: relative;
    overflow: hidden;
}

.featureCard::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg,
    transparent,
    rgba(203, 30, 30, 0.05),
    transparent);
    transition: left 0.6s ease;
}

.featureCard:hover::before {
    left: 100%;
}

.featureCard:hover {
    transform: translateY(-8px) scale(1.02);
    box-shadow: 0 0 40px rgba(220, 38, 38, 0.3),
    0 20px 40px rgba(0, 0, 0, 0.2);
    border-color: rgba(220, 38, 38, 0.5);
}

[data-theme='light'] .featureCard {
    background: rgba(255, 255, 255, 0.8);
    backdrop-filter: blur(20px);
    border: 1px solid rgba(203, 30, 30, 0.1);
    box-shadow: var(--shadow-soft);
    color: #2d3748;
}

[data-theme='light'] .featureCard:hover {
    transform: translateY(-8px) scale(1.02);
    box-shadow: 0 20px 50px rgba(203, 30, 30, 0.15),
    0 0 0 1px rgba(203, 30, 30, 0.2);
    border-color: rgba(203, 30, 30, 0.3);
}

.buttons {
    display: flex;
    align-items: center;
    justify-content: flex-start;
    gap: 1.5rem;
    margin-top: 3rem;
    margin-left: 0;
}

.buttons :global(.button) {
    margin: 0;
    cursor: pointer;
    transition: all 0.4s cubic-bezier(0.16, 1, 0.3, 1);
    position: relative;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    border-radius: 12px;
    font-weight: 600;
    letter-spacing: 0.02em;
    overflow: hidden;
}

.buttons :global(.button::before) {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
    transition: left 0.6s ease;
}

.buttons :global(.button:hover::before) {
    left: 100%;
}

.buttons :global(.button:hover) {
    transform: translateY(-4px) scale(1.02);
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2),
    0 0 0 1px rgba(255, 255, 255, 0.1);
}

.buttons :global(.button--secondary) {
    background: linear-gradient(135deg, var(--ifm-color-primary), rgba(194, 44, 36, 0.9));
    border: none;
    color: white;
    position: relative;
    z-index: 1;
}

.buttons :global(.button--secondary::after) {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(135deg, rgba(255, 59, 48, 0.9), var(--ifm-color-primary));
    opacity: 0;
    transition: opacity 0.3s ease;
    z-index: -1;
}

.buttons :global(.button--secondary:hover::after) {
    opacity: 1;
}

.buttons :global(.button--outline.button--secondary) {
    background: transparent;
    border: 2px solid var(--ifm-color-primary);
    color: var(--ifm-color-primary);
    backdrop-filter: blur(10px);
}

.buttons :global(.button--outline.button--secondary:hover) {
    background: var(--ifm-color-primary);
    color: white;
    border-color: var(--ifm-color-primary);
    box-shadow: 0 10px 30px rgba(203, 30, 30, 0.3),
    0 0 0 1px rgba(255, 255, 255, 0.1);
}
